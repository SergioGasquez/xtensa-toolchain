name: CI

on:
  pull_request:
    branches:
      - main
  push:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check-environment:
    name: Check environmnent
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        name: Install Xtensa Rust
        with:
          default: true
          ldproxy: false
      - run: rustc --print target-list | grep xtensa
      - run: env | grep LIBCLANG_PATH
      - run: xtensa-esp32-elf-gcc --version
      - run: xtensa-esp32s2-elf-gcc --version
      - run: xtensa-esp32s3-elf-gcc --version

  check-arguments:
    name: Check `buildtarget`, `version`, `override` and `ldproxy` arguments
    runs-on: ubuntu-latest
    steps:
      - run: rustup update stable && rustup default stable
      - uses: actions/checkout@v3
      - uses: ./
        name: Install Xtensa Rust
        with:
          override: false
          ldproxy: true
          buildtargets: esp32,esp32c3
          version: 1.64.0.0
      - run: rustc +esp --print target-list | grep xtensa
      - run: env | grep LIBCLANG_PATH
      - run: xtensa-esp32-elf-gcc --version
      - run: ls $HOME/.cargo/bin/ldproxy | grep ldproxy
      - run: cargo +esp --version | grep 1.64.0
      - run: rustup default | grep stable

  check-host-targets:
    name: Check `host_target` (${{ matrix.os.target_triple }})
    strategy:
      fail-fast: false
      matrix:
         os:
          - runner: window-latest
            target_triple: x86_64-pc-windows-msvc
          - runner: macos-latest
            target_triple: x86_64-apple-darwin
    runs-on: ${{ matrix.os.runner }}
    steps:
      - run: rustup update stable && rustup default stable
      - uses: actions/checkout@v3
      - uses: ./
        name: Install Xtensa Rust
        with:
          host_target: ${{ matrix.os.target_triple }}
      - run: rustc +esp --print target-list | grep xtensa

